{"version":3,"sources":["DrumPad.js","DrumKit.js","Display.js","CodeToKeyConverter.js","DrumMachine.js","AudioPlayer.js","App.js","index.js"],"names":["DrumPad","props","state","keyName","handleClick","bind","this","onKeyPress","className","Button","style","backgroundColor","borderColor","color","borderRadius","onClick","size","React","Component","DrumKit","handleKeyPress","keyPressed","Container","Row","xs","md","lg","Col","Display","lastKeyPressed","CODE_TO_KEY_MAP","81","87","69","65","83","68","90","88","67","validKeyCodes","DrumMachine","handleKeyboardInteraction","setState","audioElementID","concat","audioPromise","document","getElementById","play","undefined","then","catch","error","playAudioClip","event","keyCode","includes","keyCurrent","addEventListener","removeEventListener","sm","App","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.a4df2ede.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport class DrumPad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyName: props.keyName\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.onKeyPress(this.state.keyName);\n  }\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        <Button\n          style={{\n            backgroundColor: \"#e9cba4\",\n            borderColor: \"#854442\",\n            color: \"#3c2f2f\",\n            borderRadius: \"5px\"\n          }}\n          className=\"mx-0 my-1\"\n          onClick={this.handleClick}\n          size=\"lg\"\n        >\n          {this.state.keyName}\n        </Button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { DrumPad } from \"./DrumPad.js\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nexport class DrumKit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  handleKeyPress(keyPressed) {\n    this.props.onKeyPress(keyPressed);\n  }\n\n  render() {\n    return (\n      <div className=\"background-color\">\n        <Container>\n          <Row xs={3} md={3} lg={3}>\n            <Col>\n              <DrumPad keyName=\"Q\" onKeyPress={this.handleKeyPress} />\n            </Col>\n            <Col>\n              <DrumPad keyName=\"W\" onKeyPress={this.handleKeyPress} />\n            </Col>\n            <Col>\n              <DrumPad keyName=\"E\" onKeyPress={this.handleKeyPress} />\n            </Col>\n          </Row>\n          <Row xs={3} md={3} lg={3}>\n            <Col>\n              <DrumPad keyName=\"A\" onKeyPress={this.handleKeyPress} />\n            </Col>\n            <Col>\n              <DrumPad keyName=\"S\" onKeyPress={this.handleKeyPress} />\n            </Col>\n            <Col>\n              <DrumPad keyName=\"D\" onKeyPress={this.handleKeyPress} />\n            </Col>\n          </Row>\n          <Row xs={3} md={3} lg={3}>\n            <Col>\n              <DrumPad keyName=\"Z\" onKeyPress={this.handleKeyPress} />\n            </Col>\n            <Col>\n              <DrumPad keyName=\"X\" onKeyPress={this.handleKeyPress} />\n            </Col>\n            <Col>\n              <DrumPad keyName=\"C\" onKeyPress={this.handleKeyPress} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport class Display extends React.Component {\n  render() {\n    return (\n      <div className=\"centered-fully\">\n        <p className=\"center-text-in-div bigger-font\">\n          {this.props.lastKeyPressed}\n        </p>\n      </div>\n    );\n  }\n}\n","const CODE_TO_KEY_MAP = {\n  81: \"Q\",\n  87: \"W\",\n  69: \"E\",\n  65: \"A\",\n  83: \"S\",\n  68: \"D\",\n  90: \"Z\",\n  88: \"X\",\n  67: \"C\"\n};\n\nexport const validKeyCodes = [81, 87, 69, 65, 83, 68, 90, 88, 67];\n\nexport function convertCodeToKey(keycode) {\n  return CODE_TO_KEY_MAP[keycode];\n}\n","import React from \"react\";\nimport { DrumKit } from \"./DrumKit.js\";\nimport { Display } from \"./Display.js\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { convertCodeToKey, validKeyCodes } from \"./CodeToKeyConverter.js\";\nimport { playAudioClip } from \"./AudioPlayer.js\";\n\nexport class DrumMachine extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lastKeyPressed: \"\"\n    };\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleKeyboardInteraction = this.handleKeyboardInteraction.bind(this);\n  }\n\n  handleKeyPress(keyPressed) {\n    this.setState({\n      lastKeyPressed: keyPressed\n    });\n    playAudioClip(keyPressed);\n  }\n\n  handleKeyboardInteraction(event) {\n    const keyCode = event.keyCode;\n    if (validKeyCodes.includes(keyCode)) {\n      let keyCurrent = convertCodeToKey(keyCode);\n      this.handleKeyPress(keyCurrent);\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyboardInteraction);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyboardInteraction);\n  }\n\n  render() {\n    const lastKeyPressed = this.state.lastKeyPressed;\n    return (\n      <Container className=\"display-background-color\">\n        <Row xs={2} sm={2} md={2} lg={2}>\n          <Col xs={10} sm={10} md={10} lg={10}>\n            <DrumKit\n              lastKeyPressed={lastKeyPressed}\n              onKeyPress={this.handleKeyPress}\n            />\n          </Col>\n          <Col xs={2} sm={2} md={2} lg={2}>\n            <Display lastKeyPressed={lastKeyPressed} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","export function playAudioClip(keyPressed) {\n  let audioElementID = \"audio-\";\n  audioElementID = audioElementID.concat(keyPressed);\n  const audioElementCurrent = document.getElementById(audioElementID);\n  const audioPromise = audioElementCurrent.play();\n  if(audioPromise !== undefined) {\n    audioPromise.then(() => {\n      // console.log(\"Does the audio play?\");\n    }).catch(error => {\n      // console.log(\"error\");\n    });\n  }\n}\n","import \"./styles.css\";\nimport { DrumMachine } from \"./DrumMachine.js\";\n\nexport default function App() {\n  return (\n    <div className=\"center-text-in-div\">\n      <DrumMachine />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}